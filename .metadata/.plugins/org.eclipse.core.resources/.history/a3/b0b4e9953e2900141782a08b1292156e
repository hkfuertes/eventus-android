package es.hkapps.eventus.view.events;

import es.hkapps.eventus.R;
import es.hkapps.eventus.api.Util;
import es.hkapps.eventus.model.Event;
import android.support.v7.app.ActionBar.Tab;
import android.support.v7.app.ActionBarActivity;
import android.support.v7.app.ActionBar;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.app.FragmentPagerAdapter;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.view.ViewPager;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.TextView;
import android.widget.Toast;

public class EventActivity extends ActionBarActivity implements
		ActionBar.TabListener {

	SectionsPagerAdapter mSectionsPagerAdapter;
	ViewPager mViewPager;

	protected Event event;
	private TextView name;
	private TextView date;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_event_activity);

		Intent intent = this.getIntent();
		event = (Event) intent.getExtras().getSerializable(Util.pGeneral);
		Toast.makeText(this, event.toString(), Toast.LENGTH_LONG).show();

		// Si no hay evento... finalizamos la actividad.
		if (event == null)
			finish();

		this.setTitle("Evento");
		name = (TextView) findViewById(R.id.event_title_name);
		date = (TextView) findViewById(R.id.event_title_date);

		name.setText(event.getName());
		date.setText(event.getDate());

		// Create the adapter that will return a fragment for each of the three
		// primary sections of the activity.
		mSectionsPagerAdapter = new SectionsPagerAdapter(
				getSupportFragmentManager());

		// Set up the ViewPager with the sections adapter.
		mViewPager = (ViewPager) findViewById(R.id.pager);
		mViewPager.setAdapter(mSectionsPagerAdapter);

	}

	@Override
	public void onTabSelected(ActionBar.Tab tab,
			FragmentTransaction fragmentTransaction) {
		// When the given tab is selected, switch to the corresponding page in
		// the ViewPager.
		mViewPager.setCurrentItem(tab.getPosition());
	}

	/**
	 * A {@link FragmentPagerAdapter} that returns a fragment corresponding to
	 * one of the sections/tabs/pages.
	 */
	public class SectionsPagerAdapter extends FragmentPagerAdapter {
		private static final int FRAGMENT_COUNT = 3;

		Fragment[] fragment = new Fragment[FRAGMENT_COUNT];
		String[] title = new String[FRAGMENT_COUNT];

		public SectionsPagerAdapter(FragmentManager fm) {
			super(fm);
			fragment[0] = EventInfoFragment.newInstance(event);
			title[0] = "Info";
			fragment[1] = EventProgramFragment.newInstance(event);
			title[1] = "Programa";
			fragment[2] = ParticipantsListFragment.newInstance(event);
			title[2] = "Invitados";
		}

		@Override
		public Fragment getItem(int position) {
			return fragment[position];
		}

		@Override
		public int getCount() {
			return fragment.length;
		}

		@Override
		public CharSequence getPageTitle(int position) {
			return title[position];
		}
	}

	@Override
	public void onTabReselected(Tab arg0, FragmentTransaction arg1) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onTabUnselected(Tab arg0, FragmentTransaction arg1) {
		// TODO Auto-generated method stub

	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.event, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case R.id.event_activity_action_info:
			this.mViewPager.setCurrentItem(0);
			break;
		case R.id.event_activity_action_program:
			this.mViewPager.setCurrentItem(1);
			break;
		case R.id.event_activity_action_participants:
			this.mViewPager.setCurrentItem(2);
			break;
		default:
			this.mViewPager.setCurrentItem(0);
		}
		return super.onOptionsItemSelected(item);
	}
}
